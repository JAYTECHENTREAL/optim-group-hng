definition:
  openapi: 3.0.0
  info:
    title: Optim
    description: API documentation for a boilerplate
    version: 1.0.0
  servers:
    - url: http://localhost:4500
      description: Testing server on localhost
  paths:
    /api/v1/consent:
      post:
        summary: Stores user's decision on cookies storage
        tags:
          - Cookies
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties: 
                    consent: 
                      type: string
        responses:
          '201':    # status code
            description: User consent is saved
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
                      properties:
                        userId:
                          type: string
                        consent:
                          type: string
                        categories:
                          type: string
          '422':
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500':
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string

    /api/v1/consent/{id}:
      get:
        summary: Fetches user's status on cookies
        tags:
          - Cookies
        parameters:
          - in: path
            name: id
            required: true
        responses:
          '201':    # status code
            description: User consent is saved
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
                      properties:
                        userId:
                          type: string
                        consent:
                          type: string
                        categories:
                          type: string
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500':
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string

    /api/v1/consents/{id}:
      patch:
        summary: Updates user's status on cookies
        tags:
          - Cookies
        parameters:
          - in: path
            name: id
            required: true
        responses:
          '200':    # status code
            description: User consent is updated
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
                      properties:
                        userId:
                          type: string
                        consent:
                          type: string
                        categories:
                          type: string
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500':
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string

    /api/v1/invite/{id}:
      get:
        summary: Fetches invite page
        tags:
          - Invite
        parameters:
          - in: path
            name: id
            required: true
        responses:
          '200':    # status code
            description: Fetch invite page
            content:
              application/json:
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500':
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string

    /api/v1/dashboard:
      get:
        summary: Fetches content of a dasboard page
        tags:
          - Dashboard
        security:
          - bearerAuth: []
        parameters:
          - in: path
            name: id
            required: true
        responses:
          '200':
            description: Fetched dashboard data
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
          '404':
            description: Not Found
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500': 
            description: Error
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string

    /api/v1/widget/{id}:
      get:
        summary: Fetches content of widget on a dasboard page
        tags:
          - Dashboard
        security:
          - bearerAuth: []
        parameters:
          - in: path
            name: id
            required: true
        responses:
          '200':
            description: Fetched widget data
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
          '404':
            description: Not Found
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500': 
            description: Error
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string

    /api/v1/waitlist:
      get:
        summary: Fetches list of users on waitlist
        tags:
          - Waitlist
        security:
          - bearerAuth: []
        responses:
          '200':    # status code
            description: Fetched waitlist data
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
                      properties:
                        userId:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
          '404':
            description: Not Found
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500': 
            description: Error
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
    
    /api/v1/waitlists:
      post:
        summary: Add a user to waitlist.
        tags:
          - Waitlist
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties: 
                    email: 
                      type: string
        responses:
          '201':    # status code
            description: User added to waitlist
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
                      properties:
                        userId:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
          '422':
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500':
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                      errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
    
    /api/v1/waitlist/{id}:
      get:
        summary: Fetches user on waitlist using id
        tags:
          - Waitlist
        parameters:
          - in: path
            name: id
            required: true
        security:
          - bearerAuth: []
        responses:
          '200':    # status code
            description: Fetched waitlist data
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
                      properties:
                        userId:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
          '404':
            description: Not Found
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500': 
            description: Error
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
    
    /api/v1/waitlists/{id}:
      delete:
        summary: Delete a user from waitlist using id
        tags:
          - Waitlist
        parameters:
          - in: path
            name: access_key
            required: true
        security:
          - bearerAuth: []
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    key:
                      type: object
                      properties:
                        accessKey:
                          type: string
                        created_At:
                          type: string
                        expiry:
                          type: string
                        status:
                          type: string
          '404':
            description: Not Found
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500':
            description: Error
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
    
    /api/v1/marketing:
      get:
        summary: Fetches content of marketing page
        tags:
          - Marketing page
        security:
          - bearerAuth: []
        responses:
          '200':
            description: Fetched marketing data
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
          '404':
            description: Not Found
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500': 
            description: Error
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
    
    /api/v1/me/users:
      get:
        summary: Exports users data
        tags:
          - Export User
        security:
          - bearerAuth: []
        responses:
          '200':
            description: Fetched marketing data
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    status: 
                      type: string
                    message:
                      type: string
                    data:
                      type: object
          '404':
            description: Not Found
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
          '500': 
            description: Error
            content:
              application/json:
                schema: 
                  type: object
                  properties: 
                    errors: 
                        type: object
                        properties:
                          status: 
                            type: string
                          message:
                            type: string
    
  components:
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT  
apis: [./routes/*.js]
